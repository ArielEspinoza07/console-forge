#!/usr/bin/env php
<?php

declare(strict_types=1);

use ConsoleForge\Console\Commands\InitDirCommand;
use ConsoleForge\Console\Commands\InitFileCommand;
use ConsoleForge\Descriptors\CommandDescriptor;
use ConsoleForge\Descriptors\OptDescriptor;
use ConsoleForge\InMemoryCommandRegistry;
use ConsoleForge\Support\ConfigLoader;
use ConsoleForge\SymfonyCommandMapper;
use Symfony\Component\Console\Application;

require __DIR__ . '/../vendor/autoload.php';

// Search if nunomaduro/collision is installed and register it
// for pretty error messages
if (class_exists(\NunoMaduro\Collision\Provider::class)) {
    (new \NunoMaduro\Collision\Provider())->register();
}

$registry = new InMemoryCommandRegistry();

// Built-in commands
$registry->add(
        descriptor: new CommandDescriptor(
                name: 'init:file',
                description: 'Create a single configuration file config/console-forge.php',
                opts: [
                        OptDescriptor::flag('force', 'f', 'Overwrites if already exists'),
                ],
                handler: InitFileCommand::class,
        ),
)->add(
        descriptor: new CommandDescriptor(
                name: 'init:dir',
                description: 'Create the config/console-forge directory for multiple files',
                opts: [
                        OptDescriptor::flag('force', 'f', 'Overwrites if already exists'),
                ],
                handler: InitDirCommand::class
        ),
);

// project configs
ConfigLoader::loadProjectConfigs($registry, getcwd());

// Dynamic version if available
$version = class_exists(\Composer\InstalledVersions::class)
        ? (\Composer\InstalledVersions::getPrettyVersion('arielespinoza07/console-forge') ?? 'dev')
        : 'dev';

$app = new Application('ConsoleForge', $version);
$mapper = new SymfonyCommandMapper();
$mapper->attach($app, $registry->all());

$app->run();
